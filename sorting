#include <iostream>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <algorithm>

using std::cout;
using std::cin;
using std::endl;
using std::vector;
using std::ofstream;
using std::sort;

int numCheck(int num){
    while(cin.fail() || num < 0){
        cin.clear();
        cin.ignore(1000, '\n');
        cout << "Ошибка ввода данных, введите значение заново: ";
        cin >> num;
    }
    return num;
}

void quickSort(vector <int> &nums, size_t left, size_t right){

    if (left > right) return;
    int p = nums[(left+right)/2];
    int i = left, j = right;

    while (i <= j){
        while(nums[i] < p){
            i++;
        }

        while(nums[j] > p){
            j--;
        }

        if (i <= j){
            int tmp = nums[i];
            nums[i] = nums[j];
            nums[j] = tmp;
            i++;
            j--;
        }
    }
    if (i < right){
        quickSort(nums, i, right);
    }
    if(j > 0){
        quickSort(nums, left, j);
    }

}

void takeNums(){
    srand(time(0));
    int countNums;
    ofstream notSorted, sorted;
    bool flag = true; 
    notSorted.open("notSorted");
    sorted.open("sorted");
    vector <int> nums;

    cout << "Укажите диапазон чисел: ";
    cin >> countNums;
    countNums = numCheck(countNums);

    cout << "Неотсортированный массив:" << '\n';
    for (int i = 0; i < countNums; i++){
        nums.push_back(rand() % countNums);
        cout << nums[i] << " ";
        notSorted << nums[i] << " ";
    }
    cout << '\n';

    quickSort(nums, 0, nums.size());
    cout << "Отсортированный массив:" << '\n';
    for (int i = 0; i < countNums; i++){
        cout << nums[i] << " ";
        sorted << nums[i] << " ";
    }

    vector <int> nums2(nums);
    sort(nums2.begin(), nums2.end());
    for(int i = 0; i < countNums; i++){
        if(nums[i] != nums2[i]){
            flag = false;
        }
    }

    cout << '\n';
    if(flag == true){
        cout << "Всё отсортировалось, всё супер!";      
    }
    else{
        cout << "Нам конец";
    }
}


int main(){
    setlocale(LC_ALL, "rus");

    int t1 = clock();

    takeNums();

    int t2 = clock();
    int t3 = t2 - t1;
    cout << '\n' << ((double)t3 / CLOCKS_PER_SEC) << "sec." << '\n';

    return 0;
}
